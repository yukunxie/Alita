apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.realxie.alita"
        minSdkVersion 26
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++17 -frtti -DVK_USE_PLATFORM_ANDROID_KHR"
            }
        }
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable true
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }
        customDebuggableBuildType {
            debuggable true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    sourceSets {
        main {
            def ndkDir = android.ndkDirectory
            jniLibs {
                // Gradle includes libraries in the following path as dependencies
                // of your CMake or ndk-build project so that they are packaged in
                // your appâ€™s APK.
                srcDir "$ndkDir/sources/third_party/vulkan/src/build-android/jniLibs"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

android.applicationVariants.all { variant ->
    println("reaxlie vulkan demo: Pre build script begin ...${projectDir}")

    delete "build/outputs/apk/debug/app-debug/assets"
    delete "src/main/assets"
    mkdir "src/main/assets"

    variant.mergeAssets.doFirst
    {
        copy {
            from "${projectDir}/../assets/"
            into "src/main/assets/"
        }
    }
    println("reaxlie vulkan demo: Pre build script end ...")
}
